'use strict';

module.exports = {
  env: {
    es6: true,
    node: true,
  },
  parserOptions: {
    ecmaVersion: 2020,
  },
  extends: ['plugin:node/recommended'],
  plugins: [
    'eslint-comments',
    'filenames',
    'jsdoc',
    'json-light',
    'node',
    'promise',
    'security',
    'sort-class-members',
    'unicorn',
  ],
  rules: {
    'array-bracket-newline': ['error', 'consistent'],
    'array-bracket-spacing': [2, 'never'],
    'array-callback-return': 2,
    'array-element-newline': ['error', 'consistent'],
    'arrow-body-style': 1,
    'arrow-parens': 2,
    'arrow-spacing': 2,
    'block-scoped-var': 2,
    'block-spacing': 2,
    'camelcase': 2,
    'class-methods-use-this': 1,
    'comma-dangle': [2, 'always-multiline'],
    'comma-spacing': 2,
    'comma-style': 2,
    'computed-property-spacing': 2,
    'consistent-this': [2, 'self'],
    'consistent-return': 1,
    'curly': ['error', 'all'],
    'default-case': 2,
    'dot-location': [2, 'property'],
    'dot-notation': 2,
    'eol-last': 2,
    'filenames/match-regex': [2, '^[a-z0-9-.]+$'],
    'func-call-spacing': 2,
    'func-name-matching': 2,
    'generator-star-spacing': [2, 'after'],
    'getter-return': 2,
    'handle-callback-err': 1,
    'indent': ['error', 2],
    'jsdoc/check-param-names': 2,
    'jsdoc/check-tag-names': 1,
    'jsdoc/check-types': 2,
    'jsdoc/newline-after-description': 2,
    'jsdoc/require-description-complete-sentence': 2,
    'jsdoc/require-hyphen-before-param-description': 2,
    'jsdoc/require-param': 2,
    'jsdoc/require-param-type': 1,
    'jsdoc/require-param-description': 1,
    'jsdoc/require-returns-type': 1,
    'jsdoc/require-returns-description': 0,
    'key-spacing': 2,
    'keyword-spacing': [2, {
      overrides: {
        if: { 'after': true },
        for: { 'after': true },
        while: { 'after': true },
        catch: { 'after': true },
        function: { 'after': true },
        super: { 'after': false },
        switch: { 'after': true },
      },
    }],
    'linebreak-style': 2,
    'new-cap': 2,
    'new-parens': 2,
    'newline-per-chained-call': 1,
    'no-alert': 2,
    'no-async-promise-executor': 2,
    'no-buffer-constructor': 2,
    'no-caller': 2,
    'no-console': [2, {
      allow: ['warn', 'error'],
    }],
    'no-catch-shadow': 2,
    'no-duplicate-imports': 2,
    'no-else-return': 2,
    'no-empty-function': 2,
    'no-eval': 2,
    'no-extra-bind': 2,
    'no-extra-label': 2,
    'no-floating-decimal': 2,
    'no-implied-eval': 2,
    'no-invalid-this': 2,
    'no-iterator': 2,
    'no-labels': 2,
    'no-lone-blocks': 2,
    'no-lonely-if': 2,
    'no-loop-func': 1,
    'no-magic-numbers': 2,
    'no-misleading-character-class': 2,
    'no-mixed-operators': 2,
    'no-multi-spaces': 2,
    'no-multiple-empty-lines': 2,
    'no-new-require': 2,
    'no-proto': 2,
    'no-return-assign': 2,
    'no-return-await': 2,
    'no-script-url': 2,
    'no-self-compare': 2,
    'no-sequences': 2,
    'no-shadow': 1,
    'no-sync': 1,
    'no-tabs': 2,
    'no-trailing-spaces': 2,
    'no-unmodified-loop-condition': 2,
    'no-unneeded-ternary': 2,
    'no-unused-expressions': 2,
    'no-use-before-define': 0,
    'no-useless-call': 2,
    'no-useless-computed-key': 2,
    'no-useless-concat': 2,
    'no-useless-constructor': 2,
    'no-useless-escape': 2,
    'no-useless-rename': 2,
    'no-useless-return': 2,
    'no-template-curly-in-string': 2,
    'no-throw-literal': 1,
    'no-var': 2,
    'no-void': 2,
    'no-whitespace-before-property': 2,
    'no-with': 1,
    'node/no-unpublished-import': 0,
    'object-curly-newline': ['error', {
      'consistent': true,
    }],
    'object-curly-spacing': [2, 'always'],
    'object-property-newline': 2,
    'object-shorthand': 1,
    'one-var-declaration-per-line': 2,
    'one-var': 0,
    'operator-linebreak': 2,
    'padded-blocks': ['error', 'never'],
    'prefer-arrow-callback': 1,
    'prefer-const': 1,
    'prefer-destructuring': 1,
    'prefer-rest-params': 2,
    'prefer-promise-reject-errors': 1,
    'prefer-spread': 2,
    'prefer-template': 2,
    'promise/always-return': 1,
    'radix': 2,
    'require-atomic-updates': 2,
    'rest-spread-spacing': 2,
    'semi': 2,
    'semi-spacing': 2,
    'semi-style': [2, 'last'],
    'security/detect-object-injection': 0,
    'security/detect-non-literal-fs-filename': 1,
    'sort-class-members/sort-class-members': [2, {
      order: [
        '[static-properties]',
        '[static-getters]',
        '[static-accessor-pairs]',
        '[static-methods]',
        'constructor',
        '[properties]',
        '[getters]',
        '[accessor-pairs]',
        '[conventional-private-properties]',
        '[conventional-private-getters]',
        '[conventional-private-accessor-pairs]',
        '[methods]',
        '[conventional-private-methods]',
      ],
      groups: {
        'static-accessor-pairs': [{
          type: 'method',
          accessorPair: true,
          static: true,
        }],
        'static-getters': [{
          type: 'method',
          kind: 'get',
          static: true,
          accessorPair: false,
        }],
        'conventional-private-getters': [{
          type: 'method',
          kind: 'get',
          accessorPair: false,
          name: '/_.+/',
        }],
        'conventional-private-accessor-pairs': [{
          type: 'method',
          accessorPair: true,
          name: '/_.+/',
        }],
      },
      accessorPairPositioning: 'getThenSet',
    }],
    'space-before-blocks': 2,
    'space-before-function-paren': [2, {
      anonymous: 'never',
      named: 'never',
      asyncArrow: 'always',
    }],
    'space-infix-ops': 2,
    'space-unary-ops': 2,
    'strict': 1,
    'switch-colon-spacing': 2,
    'template-curly-spacing': 2,
    'template-tag-spacing': 2,
    'unicode-bom': 2,
    'unicorn/throw-new-error': 'error',
    'unicorn/number-literal-case': 'error',
    'unicorn/escape-case': 'error',
    'unicorn/no-array-instanceof': 'error',
    'unicorn/no-new-buffer': 'error',
    'unicorn/no-hex-escape': 'error',
    'unicorn/prefer-starts-ends-with': 'error',
    'unicorn/import-index': 'warn',
    'unicorn/new-for-builtins': 'error',
    'unicorn/regex-shorthand': 'warn',
    'unicorn/error-message': 'warn',
    'unicorn/prefer-exponentiation-operator': 'warn',
    'unicorn/no-console-spaces': 'warn',
    'unicorn/no-for-loop': 'error',
    'unicorn/prefer-includes': 'error',
    'yield-star-spacing': 2,
    'yoda': 2,
  },
  settings: {
    jsdoc: {
      tagNamePreference: {
        augments: 'extends',
        constant: 'const',
      },
      additionalTagNames: {
        customTags: ['async'],
      },
    },
  },
  extends: [
    'eslint:recommended',
    'plugin:promise/recommended',
    'plugin:security/recommended',
    'plugin:array-func/recommended',
    'plugin:eslint-comments/recommended',
  ],
};
